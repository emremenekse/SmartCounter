name: dockercompose17725069844486539413
services:
  counterdb:
    container_name: counterdb
    environment:
      POSTGRES_DB: CounterDb
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: sa
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U sa
      timeout: 30s
      interval: 30s
      retries: 3
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: counterdb_data
        target: /var/lib/postgresql/data
        volume: {}
  counterservice:
    build:
      context: C:\Users\mehme\OneDrive\Masa端st端\SmartCounter\CounterService
      dockerfile: CounterService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: CounterService
    container_name: counter.api
    depends_on:
      counterdb:
        condition: service_healthy
        required: true
      rabbitmq:
        condition: service_healthy
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings:DatabaseSettings: Server=counterdb;Port=5432;Database=CounterDb;User Id=sa;Password=admin;
      RabbitMQSettings:Host: amqp://rabbitmq:5672
    image: counterservice
    labels:
      com.microsoft.visual-studio.project-name: CounterService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/CounterService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8001"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\mehme\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mehme\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mehme\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mehme\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mehme\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net7.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  rabbitmq:
    container_name: rabbitmq
    healthcheck:
      test:
        - CMD-SHELL
        - rabbitmqctl status
      timeout: 30s
      interval: 30s
      retries: 3
    image: rabbitmq:3-management
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5672
        published: "5672"
        protocol: tcp
      - mode: ingress
        target: 15672
        published: "15672"
        protocol: tcp
    restart: always
  reportdb:
    container_name: reportdb
    environment:
      POSTGRES_DB: ReportDb
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: sa
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U sa
      timeout: 30s
      interval: 30s
      retries: 3
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5433"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: reportdb_data
        target: /var/lib/postgresql/data
        volume: {}
  reportservice:
    build:
      context: C:\Users\mehme\OneDrive\Masa端st端\SmartCounter\CounterService
      dockerfile: ReportService/ReportService/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: ReportService
    container_name: report.api
    depends_on:
      rabbitmq:
        condition: service_healthy
        required: true
      reportdb:
        condition: service_healthy
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings:DatabaseSettings: Server=reportdb;Port=5433;Database=ReportDb;User Id=sa;Password=admin;
      RabbitMQSettings:Host: amqp://rabbitmq:5672
    image: reportservice
    labels:
      com.microsoft.visual-studio.project-name: ReportService
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/ReportService.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8002"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\mehme\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mehme\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mehme\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mehme\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\mehme\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net7.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose17725069844486539413_default
volumes:
  counterdb_data:
    name: dockercompose17725069844486539413_counterdb_data
  reportdb_data:
    name: dockercompose17725069844486539413_reportdb_data