version: '3.4'

services:
  reportdb:
    container_name: reportdb
    restart: always
    environment:
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=ReportDb
    ports:
      - "5432:5432"
    volumes:
      - reportdb_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sa"]
      interval: 30s
      timeout: 30s
      retries: 3
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 30s
      timeout: 30s
      retries: 3
  counterdb:
    container_name: counterdb
    restart: always
    environment:
      - POSTGRES_USER=sa
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=CounterDb
    ports:
      - "5433:5432"
    volumes:
      - counterdb_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sa"]
      interval: 30s
      timeout: 30s
      retries: 3
  counterservice:
    container_name: counter.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DatabaseSettings=Server=counterdb;Port=5432;Database=CounterDb;User Id=sa;Password=admin;"
      - "RabbitMQSettings:Host=amqp://rabbitmq:5672"
    depends_on:
      counterdb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8001:80"
    command: ["dotnet", "CounterService.dll"]
  reportservice:
    container_name: report.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DatabaseSettings=Server=reportdb;Port=5432;Database=ReportDb;User Id=sa;Password=admin;"
      - "RabbitMQSettings:Host=amqp://rabbitmq:5672"
      - "GrpcSettings:CounterServiceUrl=http://counter.api"
      - CounterApi:BaseUrl=http://counter.api
    volumes:
      - reports:/app/Reports
    depends_on:
      reportdb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8002:80"
    command: ["dotnet", "ReportService.dll"]
